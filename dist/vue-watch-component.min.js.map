{"version":3,"file":"vue-watch-component.min.js","sources":["../src/index.js"],"sourcesContent":["const util = {\n  isArray (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]'\n  },\n  has (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key)\n  }\n}\n\nclass VueWatchComponent {\n  constructor (options) {\n    if (typeof options.watch !== 'function') {\n      throw new Error('[vue-watch-component] options.watch must be a function type')\n    }\n    if (typeof options.handler !== 'function') {\n      throw new Error('[vue-watch-component] options.handler must be a function type')\n    }\n    this.initialOptions = options\n    this.options = { ...options }\n    this.vmArr = []\n    this.unwatchArr = []\n  }\n  clone () {\n    return new VueWatchComponent(this.initialOptions)\n  }\n  init (vm) {\n    const options = this.options\n    const watchOptions = {\n      immediate: true\n    }\n    if (util.has(options, 'deep')) {\n      watchOptions.deep = options.deep\n    }\n    let isBtn = true\n    const unwatch = vm.$watch(() => {\n      return options.watch.call(vm)\n    }, (newVal, oldVal) => {\n      if (isBtn && options.immediate !== true) {\n        isBtn = false\n        if (options.value === newVal) {\n          return\n        }\n      }\n      if ((util.has(options, 'value') || options.immediate === true)) {\n        options.handler.call(vm, newVal, oldVal)\n      }\n      options.value = newVal\n    }, watchOptions)\n    this.vmArr.push(vm)\n    this.unwatchArr.push(unwatch)\n  }\n  destroy (vm) {\n    const index = this.vmArr.indexOf(vm)\n    this.vmArr.splice(index, 1)\n    this.unwatchArr[index]()\n    this.unwatchArr.splice(index, 1)\n  }\n}\n\nconst toBe = (vm, callback) => {\n  const { watchComponents } = vm.$options\n  if (!util.isArray(watchComponents)) return\n  watchComponents.forEach(watchComponent => {\n    callback(watchComponent)\n  })\n}\n\nVueWatchComponent.install = function (Vue) {\n  Vue.mixin({\n    created () {\n      toBe(this, watchComponent => watchComponent.init(this))\n    },\n    activated () {\n      toBe(this, watchComponent => watchComponent.init(this))\n    },\n    deactivated () {\n      toBe(this, watchComponent => watchComponent.destroy(this))\n    },\n    beforeDestroy () {\n      toBe(this, watchComponent => watchComponent.destroy(this))\n    }\n  })\n}\n\nVueWatchComponent.version = '__version__'\n\nif (typeof window === 'object' && window.Vue) {\n  window.Vue.use(VueWatchComponent)\n}\nexport default VueWatchComponent\n"],"names":["util","arg","Object","prototype","toString","call","obj","key","hasOwnProperty","VueWatchComponent","options","watch","Error","handler","initialOptions","vmArr","unwatchArr","this","vm","watchOptions","deep","isBtn","unwatch","$watch","newVal","oldVal","immediate","value","push","index","indexOf","splice","toBe","callback","watchComponents","$options","forEach","watchComponent","install","Vue","mixin","init","destroy","version","window","use"],"mappings":"q4BAAMA,WACKC,SACwC,mBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,IAFpCD,WAICM,EAAKC,UACDL,OAAOC,UAAUK,eAAeH,KAAKC,EAAKC,IAI/CE,wBACSC,gBACkB,mBAAlBA,EAAQC,YACX,IAAIC,MAAM,kEAEa,mBAApBF,EAAQG,cACX,IAAID,MAAM,sEAEbE,eAAiBJ,OACjBA,aAAeA,QACfK,cACAC,+DAGE,IAAIP,EAAkBQ,KAAKH,6CAE9BI,OACER,EAAUO,KAAKP,QACfS,cACO,GAETnB,EAASU,EAAS,YACPU,KAAOV,EAAQU,UAE1BC,GAAQ,EACNC,EAAUJ,EAAGK,OAAO,kBACjBb,EAAQC,MAAMN,KAAKa,IACzB,SAACM,EAAQC,GACNJ,IAA+B,IAAtBX,EAAQgB,eACX,EACJhB,EAAQiB,QAAUH,MAInBxB,EAASU,EAAS,WAAkC,IAAtBA,EAAQgB,cACjCb,QAAQR,KAAKa,EAAIM,EAAQC,KAE3BE,MAAQH,IACfL,QACEJ,MAAMa,KAAKV,QACXF,WAAWY,KAAKN,mCAEdJ,OACDW,EAAQZ,KAAKF,MAAMe,QAAQZ,QAC5BH,MAAMgB,OAAOF,EAAO,QACpBb,WAAWa,UACXb,WAAWe,OAAOF,EAAO,YAI5BG,EAAO,SAACd,EAAIe,OACRC,EAAoBhB,EAAGiB,SAAvBD,gBACHlC,EAAakC,MACFE,QAAQ,cACbC,aAIb5B,EAAkB6B,QAAU,SAAUC,KAChCC,uCAEKvB,KAAM,mBAAkBoB,EAAeI,6CAGvCxB,KAAM,mBAAkBoB,EAAeI,+CAGvCxB,KAAM,mBAAkBoB,EAAeK,oDAGvCzB,KAAM,mBAAkBoB,EAAeK,iBAKlDjC,EAAkBkC,QAAU,QAEN,gCAAXC,qBAAAA,UAAuBA,OAAOL,YAChCA,IAAIM,IAAIpC"}